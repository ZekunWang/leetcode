/*
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in 
the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)
*/

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> v;
        int tg(nums.size() - 1);
        sort(nums.begin(), nums.end());
        if(tg < 2 || nums[0] > 0 || nums[tg] < 0) return v;
        for(int i = 0; i <= tg - 2; i++){
            int j(i + 1), k(tg), tmp(nums[i] + nums[j]);
            while(j < k){
                if(tmp > -nums[k]) k--;
                else{
                    if(tmp == -nums[k]){
                        if(j == 1) tg = k;
                        v.push_back(vector<int> ({nums[i],nums[j++],nums[k--]}));
                        while(j < k && nums[k + 1] == nums[k]) k--;
                        while(j < k && nums[j - 1] == nums[j]) j++;
                    }else j++;
                    tmp = nums[i] + nums[j];
                }
            }
            while(i <= tg - 2 && nums[i + 1] == nums[i]) i++;
        }
        return v;
    }
};
