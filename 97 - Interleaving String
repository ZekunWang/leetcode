/*
Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

For example,
Given:
s1 = "aabcc",
s2 = "dbbca",

When s3 = "aadbbcbcac", return true.
When s3 = "aadbbbaccc", return false.
*/

class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        return solution1(s1, s2, s3);
    }
private:
    bool solution1(string s1, string s2, string s3) {
        int l1(s1.length()), l2(s2.length()), l3(s3.length()), i(1), j(0);
        if(l1 + l2 != l3) return false; 
        bool *chk = new bool[l2 + 1];
        memset(chk, false, l2 + 1);
        chk[0] = true;
        while(i <= l2 && chk[i - 1] && s2[i - 1] == s3[i - 1]) chk[i++] = true;
        for(i = 1; i <= l1; i++){
            j = 0;
            chk[0] = chk[0] && s1[i - 1] == s3[i - 1];
            while(++j <= l2)
                chk[j] = (chk[j] && s1[i - 1] == s3[i+j-1]) || (chk[j-1] && s2[j - 1] == s3[i+j-1]);
        }
        i = chk[l2];
        delete chk;
        return i;
    }
};
