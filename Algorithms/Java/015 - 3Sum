/*
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? 
Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],
A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
*/

public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        if (nums == null || nums.length < 3) {
            return list;
        }
        Arrays.sort(nums);
        
        for (int i = 0; i < nums.length - 2; i++) {
            int left = i + 1, right = nums.length - 1, sum;
            while (left < right) {
                sum = nums[left] + nums[right];
                if (sum == -nums[i]) {
                    list.add(Arrays.asList(nums[i], nums[left++], nums[right--]));
                    while (left < right && nums[right + 1] == nums[right]) {
                        right--;
                    }
                    while (left < right && nums[left - 1] == nums[left]) {
                        left++;
                    }
                } else if (sum < -nums[i]) {
                    left++;
                } else {
                    right--;
                }
            }
            
            while (i < nums.length - 3 && nums[i + 1] == nums[i]) {
                i++;
            }
        }
        return list;
    }
}
