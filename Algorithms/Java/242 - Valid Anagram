/*
Given two strings s and t, write a function to determine if t is an anagram of s.
For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.

Note:
You may assume the string contains only lowercase alphabets.
Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?
*/

import java.util.*;

public class Solution {
    public boolean isAnagram(String s, String t) {
        //return solution1(s, t);
        return solution2(s, t);
    }
    public boolean solution1(String s, String t){
        if(s == null || t == null || s.length() != t.length())
            return false;
        char[] s1 = s.toCharArray(), t1 = t.toCharArray();
        Arrays.sort(s1);
        Arrays.sort(t1);
        return Arrays.equals(s1, t1);
    }
    public boolean solution2(String s, String t){
        if(s == null || t == null || s.length() != t.length())
            return false;
        char[] chk = new char[26];
        for(int i = 0; i < s.length(); i++)
            chk[s.charAt(i) - 'a']++;
        for(int i = 0; i < s.length(); i++){
            int p = t.charAt(i) - 'a';
            if(chk[p]-- == 0) return false;
        }
        return true;
    }
}
