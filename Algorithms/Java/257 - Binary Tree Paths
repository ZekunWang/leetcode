/*
Given a binary tree, return all root-to-leaf paths.
For example, given the following binary tree:

   1
 /   \
2     3
 \
  5
All root-to-leaf paths are:
["1->2->5", "1->3"]
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list = new ArrayList<>();
        recursion(new StringBuilder(), root, list);
        return list;
    }
    
    private void recursion(StringBuilder sb, TreeNode root, List<String> list) {
        if (root == null) {
            return;
        }
        int sz = sb.length();
        if (sb.length() != 0) {
            sb.append("->");
        }
        sb.append(root.val);
        if (root.left == null && root.right == null) {
            list.add(sb.toString());
        } else{
            recursion(sb, root.left, list);
            recursion(sb, root.right, list);
        }
        sb.delete(sz, sb.length());
    }
}
