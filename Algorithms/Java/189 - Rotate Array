/*
Rotate an array of n elements to the right by k steps.

For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].

Note:
Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.

Hint:
Could you do it in-place with O(1) extra space?
Related problem: Reverse Words in a String II
*/

public class Solution {
    public void rotate(int[] nums, int k) {
        if (nums == null || nums.length < 2 || k % nums.length == 0) {
            return;
        }
        k %= nums.length;
        int position = nums.length - k;
        reverse(nums, 0, position - 1);
        reverse(nums, position, nums.length - 1);
        reverse(nums, 0, nums.length - 1);
    }
    
    private void reverse(int[] ar, int i, int j) {
        int tmp;
        while (i < j) {
            tmp = ar[i];
            ar[i++] = ar[j];
            ar[j--] = tmp;
        }
    }
}
