/*
Given an array of strings, group anagrams together.

For example, given: ["eat", "tea", "tan", "ate", "nat", "bat"], 
Return:

[
  ["ate", "eat","tea"],
  ["nat","tan"],
  ["bat"]
]
Note: All inputs will be in lower-case.
*/

public class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> list = new ArrayList<>();
        if (strs == null || strs.length == 0) {
            return list;
        }
        withSort(strs, list);
        return list;
    }
    
    private void withSort(String[] strs, List<List<String>> list) {
        Map<Integer, List<String>> map = new HashMap<>();
        for (String s : strs) {
            char[] array = s.toCharArray();
            Arrays.sort(array);
            int key = getHashCode(array);
            List<String> current = map.get(key);
            if (current == null) {
                current = new ArrayList<>();
                map.put(key, current);
            }
            current.add(s);
        }
        for (List<String> temp : map.values()) {
            list.add(temp);
        }
    }
    
    private int getHashCode(char[] array) {
        int code = 0;
        for (char ch : array) {
            code = code * 31 + ch - 96;
        }
        return code;
    }
}
