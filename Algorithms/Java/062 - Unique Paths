/*
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).
The robot can only move either down or right at any point in time. 
The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

Note: m and n will be at most 100.
*/

public class Solution {
    public int uniquePaths(int m, int n) {
        if (n == 1 || m == 1) {
            return 1;
        }
        int total = m + n - 2, target = Math.min(m, n) - 1;
        long top = 1, bot = 1;
        for (int i = total - target + 1; i <= total; i++) {
            top *= i;
        }
        for (int i = 1; i <= target; i++) {
            bot *= i;
        }
        return (int) (top / bot);
    }
}
