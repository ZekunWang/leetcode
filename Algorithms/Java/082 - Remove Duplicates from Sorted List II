/*
Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode dummy = new ListNode(0), cur = dummy;
        boolean dup = false;
        while (head != null) {
            if (head.next == null || head.next.val != head.val) {
                if (dup) {
                    dup = false;
                } else {
                    cur.next = head;
                    cur = head;
                }
            } else {
                dup = true;
            }
            head = head.next;
        }
        cur.next = null;
        return dummy.next;
    }
}
