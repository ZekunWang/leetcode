/*
Given an integer, convert it to a roman numeral.

Input is guaranteed to be within the range from 1 to 3999.
*/

public class Solution {
    public String intToRoman(int num) {
        StringBuilder sb = new StringBuilder();
        int[] remain = new int[]{num};
        convert(sb, remain, 'M', null, null, 1000);
        convert(sb, remain, 'C', 'D', 'M', 100);
        convert(sb, remain, 'X', 'L', 'C', 10);
        convert(sb, remain, 'I', 'V', 'X', 1);
        return sb.toString();
    }
    
    private void convert(StringBuilder sb, int[] remain, Character one, 
            Character five, Character ten, int unit) {
        int cnt = remain[0] / unit;
        if (cnt < 4) {
            for (int i = 0; i < cnt; i++) {
                sb.append(one);
            }
        } else if (cnt == 4) {
            sb.append(one).append(five);
        } else if (cnt < 9) {
            sb.append(five);
            for (int i = cnt - 5; i > 0; i--) {
                sb.append(one);
            }
        } else {
            sb.append(one).append(ten);
        }
        remain[0] -= cnt * unit;
    }
}
