/*
Given a roman numeral, convert it to an integer.

Input is guaranteed to be within the range from 1 to 3999.
*/

public class Solution {
    public int romanToInt(String s) {
        int res = 0, pre = Integer.MAX_VALUE, cur = 0;
        if (s == null || s.length() == 0) {
            return res;
        }
        Map<Character, Integer> map = new HashMap<>();
        init(map);
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            cur = map.get(ch);
            res += cur;
            if (ch != 'I' && cur / pre > 1) {    // cases like IV, IX, XL, XC, CD, CM
                res -= 2 * pre;     // case like IV -> 1 + 10 - 2 = 9
            }
            pre = cur;
        }
        return res;
    }
    
    private void init(Map<Character, Integer> map) {
        map.put('M', 1000);
        map.put('D', 500);
        map.put('C', 100);
        map.put('L', 50);
        map.put('X', 10);
        map.put('V', 5);
        map.put('I', 1);
    }
}
