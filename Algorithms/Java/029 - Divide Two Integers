/*
Divide two integers without using multiplication, division and mod operator.

If it is overflow, return MAX_INT.
*/

public class Solution {
    public int divide(int dividend, int divisor) {
        if (divisor == 0 || (dividend == Integer.MIN_VALUE && divisor == -1)) {
            return Integer.MAX_VALUE;
        } else if (divisor == 1) {
            return dividend;
        }
        long result = 0;
        boolean negative = (dividend < 0) ^ (divisor < 0);
        long longDividend = Math.abs((long)dividend);
        long longDivisor = Math.abs((long)divisor);
        while (longDividend >= longDivisor) {
            long temp = longDivisor, mutiply = 1;
            while (longDividend > (temp << 1)) {
                temp <<= 1;
                mutiply <<= 1;
            }
            longDividend -= temp;
            result += mutiply;
        }
        return (int)(negative ? -result : result);
    }
}
