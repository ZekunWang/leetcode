/*
Perfect Squares My Submissions Question
Total Accepted: 14431 Total Submissions: 49819 Difficulty: Medium
Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.
*/

class Solution {
public:
    int numSquares(int n) {
        //return solution1(n);
        return solution2(n);
    }
private:
    int solution1(int n){
        if(!n) return 0;
        static vector<int> v(1,0);
        while(v.size() <= n){
            int count(INT_MAX);
            for(int i = 1, sz(v.size()); i * i <= sz; i++)
                count = min(count, v[sz - i*i] + 1);
            v.push_back(count);
        }
        return v[n];
    }
    int solution2(int n){
        if(is_square(n)) return 1;
        while(!(n & 3)) n >>= 2;  //rturn 4 is n meets 4^k * (8*m + 7)
        if((n & 7) == 7) return 4;
        int tmp(sqrt(n));
        for(int i = 1; i <= tmp; i++)
            if(is_square(n - i*i)) return 2;
        return 3;
    }
    bool is_square(int n){
        int tmp(sqrt(n));
        return tmp * tmp == n;
    }
};
