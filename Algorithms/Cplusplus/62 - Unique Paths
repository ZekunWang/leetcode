/*
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner 
of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

Note: m and n will be at most 100.
*/

#include <iostream>
using namespace std;

class Solution {
    int solution1(int m, int n);
public:
    int uniquePaths(int m, int n) {
        return solution1(m, n);
    }
};

int Solution::solution1(int m, int n){
    long res(1);
    for(int i = 1, bond = min(m, n) - 1, total = m + n - 2; i <= bond; i++, total--)
        res = res * total / i;  // Cmn=m!/(n!*(m-n)!)
    return int(res);
}
