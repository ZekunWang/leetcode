/*
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which 
minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.
*/

#include <iostream>
#include <vector>
using namespace std;

class Solution {
    int solution1(vector<vector<int> > &v);
public:
    int minPathSum(vector<vector<int>>& grid) {
        return solution1(grid);
    }
};

int Solution::solution1(vector<vector<int> > &v){
    if(v.size() < 1 || v[0].size() < 1) return 0;
    int row(v.size()), col(v[0].size());
    vector<int> t(col + 1, INT_MAX);
    t[col - 1] = 0;
    for(int i = row - 1; i >= 0; i--)
        for(int j = col - 1; j >=0; j--)
            t[j] = v[i][j] + min(t[j], t[j + 1]);
    return t[0];
}
