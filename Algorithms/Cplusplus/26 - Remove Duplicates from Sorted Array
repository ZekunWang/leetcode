/*
Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this in place with constant memory.

For example,
Given input array nums = [1,1,2],

Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn't matter
what you leave beyond the new length.
*/

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        //return solution1(nums);
        return solution2(nums);
    }
private:
    int solution1(vector<int>& nums) {
        for(int i = 1; i < nums.size();){
            if(nums[i] != nums[i-1]) i++;
            else nums.erase(nums.begin() + i);
        }
        return nums.size();
    }
    int solution2(vector<int> &nums){
        int sz = nums.size();
        if(sz < 2) return sz;
        int cur = 0;
        while(cur < sz - 1 && nums[cur] != nums[cur+1]) cur++;
        for(int i = cur + 1; i < sz; i++){
            if(nums[i] != nums[cur]) nums[++cur] = nums[i];
        }
        return cur + 1;
    }
};
