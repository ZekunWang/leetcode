/*
Given two binary strings, return their sum (also a binary string).

For example,
a = "11"
b = "1"
Return "100".
*/

class Solution {
public:
    string addBinary(string a, string b) {
        //return solution1(a, b);
        return solution2(a, b);
    }
private:
    string solution1(string a, string b){
        int sza = a.length() -1, szb = b.length() - 1, pre = 0, cur = 0;
        string res;
        while(sza >= 0 && szb >= 0){
            int sum = a[sza--] - '0' + b[szb--] - '0' + pre;
            res = char(sum%2 + '0') + res;
            cur = sum > 1 ? 1 : 0;
            pre = cur;
        }
        if(sza != szb){
            int sz = sza >= 0 ? sza : szb;
            string &l = sza >= 0 ? a : b;
            for(int i = sz; i >= 0; i--){
                int sum = l[i] - '0' + pre;
                res = char(sum%2 + '0') + res;
                cur = sum > 1 ? 1 : 0;
                pre = cur;
            }
        }
        if(pre) res = '1' + res;
        return res;
    }
    string solution2(string a, string b){
        int lena(a.length()), lenb(b.length());
        int carry(0), lenl(max(lena, lenb)), lens(min(lena, lenb));
        string &l = lena > lenb ? a : b, &s = lena > lenb ? b : a;
        while(lenl--){
            if(lens) carry += l[lenl] + s[--lens] - 96;
            else carry += l[lenl] - 48;
            l[lenl] = carry % 2 ? '1' : '0';
            carry /= 2;
        }
        return carry ? '1' + l : l;
    }
};
