/*
Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, 
find the area of largest rectangle in the histogram.

Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].

The largest rectangle is shown in the shaded area, which has area = 10 unit.

For example,
Given heights = [2,1,5,6,2,3],
return 10.
*/

class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
    //return solution1(heights);
    return solution2(heights);
  }
  
  int solution2(vector<int> &array) {
    stack<int> stack;
    int largest = 0;
    for (int i = 0; i <= array.size(); i++) {
      int cur = i < array.size() ? array[i] : 0;
      while (!stack.empty() && array[stack.top()] >= cur) {
        int height = array[stack.top()];
        stack.pop();
        int left = stack.empty() ? 0 : (stack.top() + 1);
        largest = max(largest, height * (i - left));
      }
      stack.push(i);
    }
    return largest;
  }
  
  int solution1(vector<int> &array) {
    int largest = 0;
    for (int i = 0; i < array.size(); i++) {
      int left = i, right = i, height = array[i];
      while (left > 0 && array[left - 1] >= height) {
        left--;
      }
      while (right < array.size() - 1 && array[right + 1] >= height) {
        right++;
      }
      largest = max(largest, (right - left + 1) * height);
    }
    return largest;
  }
};
