/*
Given a set of distinct integers, nums, return all possible subsets.

Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
For example,
If nums = [1,2,3], a solution is: [[3],[1],[2],[1,2,3],[1,3],[2,3],[1,2],[]]
*/

#include <iostream>
#include <vector>
using namespace std;

class Solution {
    vector<vector<int> > v;
    void solution1(vector<int> nums);
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        solution1(nums);
        return v;
    }
};

void Solution::solution1(vector<int> nums){
    sort(nums.begin(), nums.end());
    v.push_back(vector<int>());
    for(int i : nums){
        for(int j = 0, sz = v.size(); j < sz; j++){
            v.push_back(v[j]);
            v.back().push_back(i);
        }
    }
}
