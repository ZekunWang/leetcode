/*
Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]
*/

class Solution {
public:
    vector<vector<int>> combine(int n, int k) {
        tmp.resize(k);
        if(n < k) return v;
        subSol(1, n, k);
        return v;
    }
private:
    vector<int> tmp;
    vector<vector<int> > v;
    void subSol(int i, int n, int k){
        while(i <= n - k + 1){
            tmp[tmp.size() - k] = i++;
            if(k > 1) subSol(i, n, k - 1);
            else v.push_back(tmp);
        }
    }
};
