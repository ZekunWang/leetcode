/*
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?
*/

class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> v;
        if(rowIndex < 0) return v;
        v.push_back(1);
        if(!rowIndex) return v;
        while(rowIndex--){
            v.push_back(0);
            for(int i = v.size() - 1; i > 0; i--)
                v[i] += v[i-1];
        }
        return v;
    }
};
