/*
Given a complete binary tree, count the number of nodes.

Definition of a complete binary tree from Wikipedia:
In a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level 
are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        return solution1(root);
    }
private:
    int solution1(TreeNode *n){
        if(!n) return 0;
        int cl(0), cr(0);
        for(TreeNode *l(n); l; l = l->left) cl++;
        for(TreeNode *r(n); r; r = r->right) cr++;
        if(cl == cr) return (1 << cl) - 1;
        return 1 + solution1(n->left) + solution1(n->right);
    }
};
