/*
Find the contiguous subarray within an array (containing at least one number) which has the largest product.

For example, given the array [2,3,-2,4],
the contiguous subarray [2,3] has the largest product = 6.
*/

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int sz(nums.size()), tmp(1), cur(1), prod(INT_MIN), fstNeg(1), fst(1);
        for(int n : nums){
            cur *= n;
            prod = max(prod, cur);
            if(fstNeg && cur < 0){  //avoid dividing 1 neg elemt, get correct val from odd(>1) num of elemts
                tmp = cur;
                fstNeg = 0;
            }else if(cur < 0) prod = max(prod, cur / tmp);  //get correct val from only 1 neg elemt of all elemts
            else if(!cur) cur = fstNeg = 1;
        }
        return prod;
    }
};
