/*
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which 
minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.
*/

class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int row(grid.size()), col(grid[0].size());
        vector<int> chk(col + 1, INT_MAX);
        chk[col-1] = 0;
        for(int i = row - 1; i >= 0; i--)
            for(int j = col - 1; j >= 0; j--)
                chk[j] = min(chk[j+1], chk[j]) + grid[i][j];
        return chk[0];
    }
};
