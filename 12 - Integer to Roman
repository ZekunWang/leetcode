/*
Given an integer, convert it to a roman numeral.

Input is guaranteed to be within the range from 1 to 3999.
*/

class Solution {
public:
    string intToRoman(int num) {
        string s;
        int dig, unit;
        while(num){
            if(num / 1000) unit =  1000;
            else if(num / 100) unit = 100;
            else if(num / 10) unit = 10;
            else unit = 1;
            dig = num / unit;
            num = num % unit;
            if(dig == 4 || dig == 9){
                s += itr(unit);
                s += itr((dig + 1) * unit);
            }else{
                if(dig > 4){
                    s += itr(5 * unit);
                    dig -= 5;
                }
                for(int i = 0; i < dig; i++) s += itr(unit);
            }
        }
        return s;
    }
private:
    char itr(int n){
        switch(n){
            case 1: return 'I';
            case 5: return 'V';
            case 10: return 'X';
            case 50: return 'L';
            case 100: return 'C';
            case 500: return 'D';
            case 1000: return 'M';
            default: return NULL;
        }
    }
};
