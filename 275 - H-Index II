/*
Follow up for H-Index: What if the citations array is sorted in ascending order? Could you optimize your algorithm?

Hint:

Expected runtime complexity is in O(log n) and the input is sorted.
*/

class Solution {
public:
    int hIndex(vector<int>& citations) {
        if(citations.empty()) return 0;
        //return solution1(citations);
        return solution2(citations, 0, citations.size() - 1);
    }
private:
    int solution1(vector<int> &v) {
        int sz(v.size()), h(sz), count(sz);
        for(int i = sz - 1; i >= 0 && count;){
            if(v[i] >= h) i--;
            else h--;
            count--;
        }
        return count ? h-1 : h;
    }
    int solution2(vector<int> &v, int lo, int hi){
        if(lo > hi) return v.size() - lo;
        int mid = (lo + hi) / 2, count(v.size() - mid);
        if(v[mid] < count) return solution2(v, mid + 1, hi);
        if(v[mid] > count) return solution2(v, lo, mid - 1);
        return count;
    }
};
