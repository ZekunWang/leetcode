/*
Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array.
*/

class Solution {
public:
    bool search(vector<int>& nums, int target) {
        return solution1(nums, target);
    }
private:
    bool solution1(vector<int> &v, int tg){
        int lo(0), hi(v.size() - 1), mid(0);
        while(lo <= hi){
            mid = (lo + hi) / 2;
            if(v[mid] == tg) return true;
            if(v[mid] < v[hi]){
                if(tg > v[mid] && tg <= v[hi]) lo = mid + 1;
                else hi = mid - 1;
            }else if(v[mid] > v[hi]){
                if(tg < v[mid] && tg >= v[lo]) hi = mid - 1;
                else lo = mid + 1;
            }else hi--;
        }
        return false;
    }
};
