/*
Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:
You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. 
The number of elements initialized in nums1 and nums2 are m and n respectively.
*/

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        if(!n) return;
        solution1(nums1, m, nums2, n);
    }
private:
    void solution1(vector<int> &n1, int m, vector<int> &n2, int n){
        int i = m + n - 1, tm = m - 1, tn = n - 1;
        while(j >= 0 && k >= 0){            //merge from m+n-1
            if(n1[tm] <= n2[tn]) n1[i--] = n2[tn--];
            else n1[i--] = n1[tm--];
        }
        if(tm < 0){         //merge all num2 if num1 is merged
            while(tn >= 0)
                n1[i--] = n2[tn--];
        }                   //no need to merge num1 if num2 is merged
    }
};
